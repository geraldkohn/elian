// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.14.0
// source: proto/record/record.proto

package record

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatientIdCardNumber string `protobuf:"bytes,1,opt,name=patient_id_card_number,json=patientIdCardNumber,proto3" json:"patient_id_card_number,omitempty"` //用于确认患者身份
	PhotoHash           string `protobuf:"bytes,2,opt,name=photo_hash,json=photoHash,proto3" json:"photo_hash,omitempty"`                                   //图片资源唯一识别码
	DocumentHash        string `protobuf:"bytes,3,opt,name=document_hash,json=documentHash,proto3" json:"document_hash,omitempty"`                          //文档资源唯一识别码
	Description         string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`                                                //病情简要描述
}

func (x *RecordRequest) Reset() {
	*x = RecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordRequest) ProtoMessage() {}

func (x *RecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordRequest.ProtoReflect.Descriptor instead.
func (*RecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{0}
}

func (x *RecordRequest) GetPatientIdCardNumber() string {
	if x != nil {
		return x.PatientIdCardNumber
	}
	return ""
}

func (x *RecordRequest) GetPhotoHash() string {
	if x != nil {
		return x.PhotoHash
	}
	return ""
}

func (x *RecordRequest) GetDocumentHash() string {
	if x != nil {
		return x.DocumentHash
	}
	return ""
}

func (x *RecordRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordUid           string `protobuf:"bytes,1,opt,name=record_uid,json=recordUid,proto3" json:"record_uid,omitempty"`                                   //病历记录的唯一识别码
	PatientIdCardNumber string `protobuf:"bytes,2,opt,name=patient_id_card_number,json=patientIdCardNumber,proto3" json:"patient_id_card_number,omitempty"` //用于确认患者身份
	PatientName         string `protobuf:"bytes,3,opt,name=patient_name,json=patientName,proto3" json:"patient_name,omitempty"`                             //患者的名字
	PhotoHash           string `protobuf:"bytes,4,opt,name=photo_hash,json=photoHash,proto3" json:"photo_hash,omitempty"`                                   //图片资源唯一识别码
	DocumentHash        string `protobuf:"bytes,5,opt,name=document_hash,json=documentHash,proto3" json:"document_hash,omitempty"`                          //文档资源唯一识别码
	LastChangeTime      string `protobuf:"bytes,6,opt,name=last_change_time,json=lastChangeTime,proto3" json:"last_change_time,omitempty"`                  //最后一次更改时间
	Description         string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`                                                //病情的简要描述
}

func (x *RecordResponse) Reset() {
	*x = RecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordResponse) ProtoMessage() {}

func (x *RecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordResponse.ProtoReflect.Descriptor instead.
func (*RecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{1}
}

func (x *RecordResponse) GetRecordUid() string {
	if x != nil {
		return x.RecordUid
	}
	return ""
}

func (x *RecordResponse) GetPatientIdCardNumber() string {
	if x != nil {
		return x.PatientIdCardNumber
	}
	return ""
}

func (x *RecordResponse) GetPatientName() string {
	if x != nil {
		return x.PatientName
	}
	return ""
}

func (x *RecordResponse) GetPhotoHash() string {
	if x != nil {
		return x.PhotoHash
	}
	return ""
}

func (x *RecordResponse) GetDocumentHash() string {
	if x != nil {
		return x.DocumentHash
	}
	return ""
}

func (x *RecordResponse) GetLastChangeTime() string {
	if x != nil {
		return x.LastChangeTime
	}
	return ""
}

func (x *RecordResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// hospital, department, name 确定一个医生
type PermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hospital   string `protobuf:"bytes,1,opt,name=hospital,proto3" json:"hospital,omitempty"`
	Department string `protobuf:"bytes,2,opt,name=department,proto3" json:"department,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PermissionRequest) Reset() {
	*x = PermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionRequest) ProtoMessage() {}

func (x *PermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionRequest.ProtoReflect.Descriptor instead.
func (*PermissionRequest) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{2}
}

func (x *PermissionRequest) GetHospital() string {
	if x != nil {
		return x.Hospital
	}
	return ""
}

func (x *PermissionRequest) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *PermissionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ErrorCodeAndInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int64  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	Msg       string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ErrorCodeAndInfo) Reset() {
	*x = ErrorCodeAndInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorCodeAndInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorCodeAndInfo) ProtoMessage() {}

func (x *ErrorCodeAndInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorCodeAndInfo.ProtoReflect.Descriptor instead.
func (*ErrorCodeAndInfo) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{3}
}

func (x *ErrorCodeAndInfo) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ErrorCodeAndInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type StaffCreateRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffToken    string         `protobuf:"bytes,1,opt,name=staff_token,json=staffToken,proto3" json:"staff_token,omitempty"`
	RecordRequest *RecordRequest `protobuf:"bytes,2,opt,name=record_request,json=recordRequest,proto3" json:"record_request,omitempty"`
}

func (x *StaffCreateRecordRequest) Reset() {
	*x = StaffCreateRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffCreateRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffCreateRecordRequest) ProtoMessage() {}

func (x *StaffCreateRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffCreateRecordRequest.ProtoReflect.Descriptor instead.
func (*StaffCreateRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{4}
}

func (x *StaffCreateRecordRequest) GetStaffToken() string {
	if x != nil {
		return x.StaffToken
	}
	return ""
}

func (x *StaffCreateRecordRequest) GetRecordRequest() *RecordRequest {
	if x != nil {
		return x.RecordRequest
	}
	return nil
}

type StaffCreateRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCodeAndInfo *ErrorCodeAndInfo `protobuf:"bytes,1,opt,name=error_code_and_info,json=errorCodeAndInfo,proto3" json:"error_code_and_info,omitempty"`
}

func (x *StaffCreateRecordResponse) Reset() {
	*x = StaffCreateRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffCreateRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffCreateRecordResponse) ProtoMessage() {}

func (x *StaffCreateRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffCreateRecordResponse.ProtoReflect.Descriptor instead.
func (*StaffCreateRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{5}
}

func (x *StaffCreateRecordResponse) GetErrorCodeAndInfo() *ErrorCodeAndInfo {
	if x != nil {
		return x.ErrorCodeAndInfo
	}
	return nil
}

type PatientQueryRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatientToken string `protobuf:"bytes,1,opt,name=patient_token,json=patientToken,proto3" json:"patient_token,omitempty"`
}

func (x *PatientQueryRecordsRequest) Reset() {
	*x = PatientQueryRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatientQueryRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatientQueryRecordsRequest) ProtoMessage() {}

func (x *PatientQueryRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatientQueryRecordsRequest.ProtoReflect.Descriptor instead.
func (*PatientQueryRecordsRequest) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{6}
}

func (x *PatientQueryRecordsRequest) GetPatientToken() string {
	if x != nil {
		return x.PatientToken
	}
	return ""
}

type PatientQueryRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordResponses  []*RecordResponse `protobuf:"bytes,1,rep,name=record_responses,json=recordResponses,proto3" json:"record_responses,omitempty"`
	ErrorCodeAndInfo *ErrorCodeAndInfo `protobuf:"bytes,2,opt,name=error_code_and_info,json=errorCodeAndInfo,proto3" json:"error_code_and_info,omitempty"`
}

func (x *PatientQueryRecordsResponse) Reset() {
	*x = PatientQueryRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatientQueryRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatientQueryRecordsResponse) ProtoMessage() {}

func (x *PatientQueryRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatientQueryRecordsResponse.ProtoReflect.Descriptor instead.
func (*PatientQueryRecordsResponse) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{7}
}

func (x *PatientQueryRecordsResponse) GetRecordResponses() []*RecordResponse {
	if x != nil {
		return x.RecordResponses
	}
	return nil
}

func (x *PatientQueryRecordsResponse) GetErrorCodeAndInfo() *ErrorCodeAndInfo {
	if x != nil {
		return x.ErrorCodeAndInfo
	}
	return nil
}

type StaffQueryRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffToken          string `protobuf:"bytes,1,opt,name=staff_token,json=staffToken,proto3" json:"staff_token,omitempty"`
	PatientIdCardNumber string `protobuf:"bytes,2,opt,name=patient_id_card_number,json=patientIdCardNumber,proto3" json:"patient_id_card_number,omitempty"` //用于确定患者
}

func (x *StaffQueryRecordsRequest) Reset() {
	*x = StaffQueryRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffQueryRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffQueryRecordsRequest) ProtoMessage() {}

func (x *StaffQueryRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffQueryRecordsRequest.ProtoReflect.Descriptor instead.
func (*StaffQueryRecordsRequest) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{8}
}

func (x *StaffQueryRecordsRequest) GetStaffToken() string {
	if x != nil {
		return x.StaffToken
	}
	return ""
}

func (x *StaffQueryRecordsRequest) GetPatientIdCardNumber() string {
	if x != nil {
		return x.PatientIdCardNumber
	}
	return ""
}

type StaffQueryRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordResponses  []*RecordResponse `protobuf:"bytes,1,rep,name=record_responses,json=recordResponses,proto3" json:"record_responses,omitempty"`
	ErrorCodeAndInfo *ErrorCodeAndInfo `protobuf:"bytes,2,opt,name=error_code_and_info,json=errorCodeAndInfo,proto3" json:"error_code_and_info,omitempty"`
}

func (x *StaffQueryRecordsResponse) Reset() {
	*x = StaffQueryRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffQueryRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffQueryRecordsResponse) ProtoMessage() {}

func (x *StaffQueryRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffQueryRecordsResponse.ProtoReflect.Descriptor instead.
func (*StaffQueryRecordsResponse) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{9}
}

func (x *StaffQueryRecordsResponse) GetRecordResponses() []*RecordResponse {
	if x != nil {
		return x.RecordResponses
	}
	return nil
}

func (x *StaffQueryRecordsResponse) GetErrorCodeAndInfo() *ErrorCodeAndInfo {
	if x != nil {
		return x.ErrorCodeAndInfo
	}
	return nil
}

type AgencyQueryRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgencyToken         string `protobuf:"bytes,1,opt,name=agency_token,json=agencyToken,proto3" json:"agency_token,omitempty"`
	PatientIdCardNumber string `protobuf:"bytes,2,opt,name=patient_id_card_number,json=patientIdCardNumber,proto3" json:"patient_id_card_number,omitempty"` //用于确定患者
}

func (x *AgencyQueryRecordsRequest) Reset() {
	*x = AgencyQueryRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgencyQueryRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgencyQueryRecordsRequest) ProtoMessage() {}

func (x *AgencyQueryRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgencyQueryRecordsRequest.ProtoReflect.Descriptor instead.
func (*AgencyQueryRecordsRequest) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{10}
}

func (x *AgencyQueryRecordsRequest) GetAgencyToken() string {
	if x != nil {
		return x.AgencyToken
	}
	return ""
}

func (x *AgencyQueryRecordsRequest) GetPatientIdCardNumber() string {
	if x != nil {
		return x.PatientIdCardNumber
	}
	return ""
}

type AgencyQueryRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordResponses  []*RecordResponse `protobuf:"bytes,1,rep,name=record_responses,json=recordResponses,proto3" json:"record_responses,omitempty"`
	ErrorCodeAndInfo *ErrorCodeAndInfo `protobuf:"bytes,2,opt,name=error_code_and_info,json=errorCodeAndInfo,proto3" json:"error_code_and_info,omitempty"`
}

func (x *AgencyQueryRecordsResponse) Reset() {
	*x = AgencyQueryRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgencyQueryRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgencyQueryRecordsResponse) ProtoMessage() {}

func (x *AgencyQueryRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgencyQueryRecordsResponse.ProtoReflect.Descriptor instead.
func (*AgencyQueryRecordsResponse) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{11}
}

func (x *AgencyQueryRecordsResponse) GetRecordResponses() []*RecordResponse {
	if x != nil {
		return x.RecordResponses
	}
	return nil
}

func (x *AgencyQueryRecordsResponse) GetErrorCodeAndInfo() *ErrorCodeAndInfo {
	if x != nil {
		return x.ErrorCodeAndInfo
	}
	return nil
}

type StaffSetReadAndWritePermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffToken         string               `protobuf:"bytes,1,opt,name=staff_token,json=staffToken,proto3" json:"staff_token,omitempty"`
	RecordUid          string               `protobuf:"bytes,2,opt,name=record_uid,json=recordUid,proto3" json:"record_uid,omitempty"`
	PermissionRequests []*PermissionRequest `protobuf:"bytes,3,rep,name=permission_requests,json=permissionRequests,proto3" json:"permission_requests,omitempty"`
}

func (x *StaffSetReadAndWritePermissionRequest) Reset() {
	*x = StaffSetReadAndWritePermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffSetReadAndWritePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffSetReadAndWritePermissionRequest) ProtoMessage() {}

func (x *StaffSetReadAndWritePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffSetReadAndWritePermissionRequest.ProtoReflect.Descriptor instead.
func (*StaffSetReadAndWritePermissionRequest) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{12}
}

func (x *StaffSetReadAndWritePermissionRequest) GetStaffToken() string {
	if x != nil {
		return x.StaffToken
	}
	return ""
}

func (x *StaffSetReadAndWritePermissionRequest) GetRecordUid() string {
	if x != nil {
		return x.RecordUid
	}
	return ""
}

func (x *StaffSetReadAndWritePermissionRequest) GetPermissionRequests() []*PermissionRequest {
	if x != nil {
		return x.PermissionRequests
	}
	return nil
}

type StaffSetReadAndWritePermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCodeAndInfo *ErrorCodeAndInfo `protobuf:"bytes,1,opt,name=error_code_and_info,json=errorCodeAndInfo,proto3" json:"error_code_and_info,omitempty"`
}

func (x *StaffSetReadAndWritePermissionResponse) Reset() {
	*x = StaffSetReadAndWritePermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffSetReadAndWritePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffSetReadAndWritePermissionResponse) ProtoMessage() {}

func (x *StaffSetReadAndWritePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffSetReadAndWritePermissionResponse.ProtoReflect.Descriptor instead.
func (*StaffSetReadAndWritePermissionResponse) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{13}
}

func (x *StaffSetReadAndWritePermissionResponse) GetErrorCodeAndInfo() *ErrorCodeAndInfo {
	if x != nil {
		return x.ErrorCodeAndInfo
	}
	return nil
}

type StaffSetReadOnlyPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffToken         string               `protobuf:"bytes,1,opt,name=staff_token,json=staffToken,proto3" json:"staff_token,omitempty"`
	RecordUid          string               `protobuf:"bytes,2,opt,name=record_uid,json=recordUid,proto3" json:"record_uid,omitempty"`
	PermissionRequests []*PermissionRequest `protobuf:"bytes,3,rep,name=permission_requests,json=permissionRequests,proto3" json:"permission_requests,omitempty"`
}

func (x *StaffSetReadOnlyPermissionRequest) Reset() {
	*x = StaffSetReadOnlyPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffSetReadOnlyPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffSetReadOnlyPermissionRequest) ProtoMessage() {}

func (x *StaffSetReadOnlyPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffSetReadOnlyPermissionRequest.ProtoReflect.Descriptor instead.
func (*StaffSetReadOnlyPermissionRequest) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{14}
}

func (x *StaffSetReadOnlyPermissionRequest) GetStaffToken() string {
	if x != nil {
		return x.StaffToken
	}
	return ""
}

func (x *StaffSetReadOnlyPermissionRequest) GetRecordUid() string {
	if x != nil {
		return x.RecordUid
	}
	return ""
}

func (x *StaffSetReadOnlyPermissionRequest) GetPermissionRequests() []*PermissionRequest {
	if x != nil {
		return x.PermissionRequests
	}
	return nil
}

type StaffSetReadOnlyPermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCodeAndInfo *ErrorCodeAndInfo `protobuf:"bytes,1,opt,name=error_code_and_info,json=errorCodeAndInfo,proto3" json:"error_code_and_info,omitempty"`
}

func (x *StaffSetReadOnlyPermissionResponse) Reset() {
	*x = StaffSetReadOnlyPermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffSetReadOnlyPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffSetReadOnlyPermissionResponse) ProtoMessage() {}

func (x *StaffSetReadOnlyPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffSetReadOnlyPermissionResponse.ProtoReflect.Descriptor instead.
func (*StaffSetReadOnlyPermissionResponse) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{15}
}

func (x *StaffSetReadOnlyPermissionResponse) GetErrorCodeAndInfo() *ErrorCodeAndInfo {
	if x != nil {
		return x.ErrorCodeAndInfo
	}
	return nil
}

type AgencySetReadAndWritePermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgencyToken        string               `protobuf:"bytes,1,opt,name=agency_token,json=agencyToken,proto3" json:"agency_token,omitempty"`
	RecordUid          string               `protobuf:"bytes,2,opt,name=record_uid,json=recordUid,proto3" json:"record_uid,omitempty"`
	PermissionRequests []*PermissionRequest `protobuf:"bytes,3,rep,name=permission_requests,json=permissionRequests,proto3" json:"permission_requests,omitempty"`
}

func (x *AgencySetReadAndWritePermissionRequest) Reset() {
	*x = AgencySetReadAndWritePermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgencySetReadAndWritePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgencySetReadAndWritePermissionRequest) ProtoMessage() {}

func (x *AgencySetReadAndWritePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgencySetReadAndWritePermissionRequest.ProtoReflect.Descriptor instead.
func (*AgencySetReadAndWritePermissionRequest) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{16}
}

func (x *AgencySetReadAndWritePermissionRequest) GetAgencyToken() string {
	if x != nil {
		return x.AgencyToken
	}
	return ""
}

func (x *AgencySetReadAndWritePermissionRequest) GetRecordUid() string {
	if x != nil {
		return x.RecordUid
	}
	return ""
}

func (x *AgencySetReadAndWritePermissionRequest) GetPermissionRequests() []*PermissionRequest {
	if x != nil {
		return x.PermissionRequests
	}
	return nil
}

type AgencySetReadAndWritePermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCodeAndInfo *ErrorCodeAndInfo `protobuf:"bytes,1,opt,name=error_code_and_info,json=errorCodeAndInfo,proto3" json:"error_code_and_info,omitempty"`
}

func (x *AgencySetReadAndWritePermissionResponse) Reset() {
	*x = AgencySetReadAndWritePermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgencySetReadAndWritePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgencySetReadAndWritePermissionResponse) ProtoMessage() {}

func (x *AgencySetReadAndWritePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgencySetReadAndWritePermissionResponse.ProtoReflect.Descriptor instead.
func (*AgencySetReadAndWritePermissionResponse) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{17}
}

func (x *AgencySetReadAndWritePermissionResponse) GetErrorCodeAndInfo() *ErrorCodeAndInfo {
	if x != nil {
		return x.ErrorCodeAndInfo
	}
	return nil
}

type AgencySetReadOnlyPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgencyToken        string               `protobuf:"bytes,1,opt,name=agency_token,json=agencyToken,proto3" json:"agency_token,omitempty"`
	RecordUid          string               `protobuf:"bytes,2,opt,name=record_uid,json=recordUid,proto3" json:"record_uid,omitempty"`
	PermissionRequests []*PermissionRequest `protobuf:"bytes,3,rep,name=permission_requests,json=permissionRequests,proto3" json:"permission_requests,omitempty"`
}

func (x *AgencySetReadOnlyPermissionRequest) Reset() {
	*x = AgencySetReadOnlyPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgencySetReadOnlyPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgencySetReadOnlyPermissionRequest) ProtoMessage() {}

func (x *AgencySetReadOnlyPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgencySetReadOnlyPermissionRequest.ProtoReflect.Descriptor instead.
func (*AgencySetReadOnlyPermissionRequest) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{18}
}

func (x *AgencySetReadOnlyPermissionRequest) GetAgencyToken() string {
	if x != nil {
		return x.AgencyToken
	}
	return ""
}

func (x *AgencySetReadOnlyPermissionRequest) GetRecordUid() string {
	if x != nil {
		return x.RecordUid
	}
	return ""
}

func (x *AgencySetReadOnlyPermissionRequest) GetPermissionRequests() []*PermissionRequest {
	if x != nil {
		return x.PermissionRequests
	}
	return nil
}

type AgencySetReadOnlyPermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCodeAndInfo *ErrorCodeAndInfo `protobuf:"bytes,1,opt,name=error_code_and_info,json=errorCodeAndInfo,proto3" json:"error_code_and_info,omitempty"`
}

func (x *AgencySetReadOnlyPermissionResponse) Reset() {
	*x = AgencySetReadOnlyPermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgencySetReadOnlyPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgencySetReadOnlyPermissionResponse) ProtoMessage() {}

func (x *AgencySetReadOnlyPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgencySetReadOnlyPermissionResponse.ProtoReflect.Descriptor instead.
func (*AgencySetReadOnlyPermissionResponse) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{19}
}

func (x *AgencySetReadOnlyPermissionResponse) GetErrorCodeAndInfo() *ErrorCodeAndInfo {
	if x != nil {
		return x.ErrorCodeAndInfo
	}
	return nil
}

type StaffUpdatePhotoHashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffToken string `protobuf:"bytes,1,opt,name=staff_token,json=staffToken,proto3" json:"staff_token,omitempty"`
	PhotoHash  string `protobuf:"bytes,2,opt,name=photo_hash,json=photoHash,proto3" json:"photo_hash,omitempty"`
	RecordUid  string `protobuf:"bytes,3,opt,name=record_uid,json=recordUid,proto3" json:"record_uid,omitempty"`
}

func (x *StaffUpdatePhotoHashRequest) Reset() {
	*x = StaffUpdatePhotoHashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffUpdatePhotoHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffUpdatePhotoHashRequest) ProtoMessage() {}

func (x *StaffUpdatePhotoHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffUpdatePhotoHashRequest.ProtoReflect.Descriptor instead.
func (*StaffUpdatePhotoHashRequest) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{20}
}

func (x *StaffUpdatePhotoHashRequest) GetStaffToken() string {
	if x != nil {
		return x.StaffToken
	}
	return ""
}

func (x *StaffUpdatePhotoHashRequest) GetPhotoHash() string {
	if x != nil {
		return x.PhotoHash
	}
	return ""
}

func (x *StaffUpdatePhotoHashRequest) GetRecordUid() string {
	if x != nil {
		return x.RecordUid
	}
	return ""
}

type StaffUpdatePhotoHashResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCodeAndInfo *ErrorCodeAndInfo `protobuf:"bytes,1,opt,name=error_code_and_info,json=errorCodeAndInfo,proto3" json:"error_code_and_info,omitempty"`
}

func (x *StaffUpdatePhotoHashResponse) Reset() {
	*x = StaffUpdatePhotoHashResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffUpdatePhotoHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffUpdatePhotoHashResponse) ProtoMessage() {}

func (x *StaffUpdatePhotoHashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffUpdatePhotoHashResponse.ProtoReflect.Descriptor instead.
func (*StaffUpdatePhotoHashResponse) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{21}
}

func (x *StaffUpdatePhotoHashResponse) GetErrorCodeAndInfo() *ErrorCodeAndInfo {
	if x != nil {
		return x.ErrorCodeAndInfo
	}
	return nil
}

type StaffUpdateDocumentHashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffToken   string `protobuf:"bytes,1,opt,name=staff_token,json=staffToken,proto3" json:"staff_token,omitempty"`
	DocumentHash string `protobuf:"bytes,2,opt,name=document_hash,json=documentHash,proto3" json:"document_hash,omitempty"`
	RecordUid    string `protobuf:"bytes,3,opt,name=record_uid,json=recordUid,proto3" json:"record_uid,omitempty"`
}

func (x *StaffUpdateDocumentHashRequest) Reset() {
	*x = StaffUpdateDocumentHashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffUpdateDocumentHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffUpdateDocumentHashRequest) ProtoMessage() {}

func (x *StaffUpdateDocumentHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffUpdateDocumentHashRequest.ProtoReflect.Descriptor instead.
func (*StaffUpdateDocumentHashRequest) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{22}
}

func (x *StaffUpdateDocumentHashRequest) GetStaffToken() string {
	if x != nil {
		return x.StaffToken
	}
	return ""
}

func (x *StaffUpdateDocumentHashRequest) GetDocumentHash() string {
	if x != nil {
		return x.DocumentHash
	}
	return ""
}

func (x *StaffUpdateDocumentHashRequest) GetRecordUid() string {
	if x != nil {
		return x.RecordUid
	}
	return ""
}

type StaffUpdateDocumentHashResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCodeAndInfo *ErrorCodeAndInfo `protobuf:"bytes,1,opt,name=error_code_and_info,json=errorCodeAndInfo,proto3" json:"error_code_and_info,omitempty"`
}

func (x *StaffUpdateDocumentHashResponse) Reset() {
	*x = StaffUpdateDocumentHashResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffUpdateDocumentHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffUpdateDocumentHashResponse) ProtoMessage() {}

func (x *StaffUpdateDocumentHashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffUpdateDocumentHashResponse.ProtoReflect.Descriptor instead.
func (*StaffUpdateDocumentHashResponse) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{23}
}

func (x *StaffUpdateDocumentHashResponse) GetErrorCodeAndInfo() *ErrorCodeAndInfo {
	if x != nil {
		return x.ErrorCodeAndInfo
	}
	return nil
}

type StaffUpdateDescriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaffToken  string `protobuf:"bytes,1,opt,name=staff_token,json=staffToken,proto3" json:"staff_token,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	RecordUid   string `protobuf:"bytes,3,opt,name=record_uid,json=recordUid,proto3" json:"record_uid,omitempty"`
}

func (x *StaffUpdateDescriptionRequest) Reset() {
	*x = StaffUpdateDescriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffUpdateDescriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffUpdateDescriptionRequest) ProtoMessage() {}

func (x *StaffUpdateDescriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffUpdateDescriptionRequest.ProtoReflect.Descriptor instead.
func (*StaffUpdateDescriptionRequest) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{24}
}

func (x *StaffUpdateDescriptionRequest) GetStaffToken() string {
	if x != nil {
		return x.StaffToken
	}
	return ""
}

func (x *StaffUpdateDescriptionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StaffUpdateDescriptionRequest) GetRecordUid() string {
	if x != nil {
		return x.RecordUid
	}
	return ""
}

type StaffUpdateDescriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCodeAndInfo *ErrorCodeAndInfo `protobuf:"bytes,1,opt,name=error_code_and_info,json=errorCodeAndInfo,proto3" json:"error_code_and_info,omitempty"`
}

func (x *StaffUpdateDescriptionResponse) Reset() {
	*x = StaffUpdateDescriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_record_record_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffUpdateDescriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffUpdateDescriptionResponse) ProtoMessage() {}

func (x *StaffUpdateDescriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_record_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffUpdateDescriptionResponse.ProtoReflect.Descriptor instead.
func (*StaffUpdateDescriptionResponse) Descriptor() ([]byte, []int) {
	return file_proto_record_record_proto_rawDescGZIP(), []int{25}
}

func (x *StaffUpdateDescriptionResponse) GetErrorCodeAndInfo() *ErrorCodeAndInfo {
	if x != nil {
		return x.ErrorCodeAndInfo
	}
	return nil
}

var File_proto_record_record_proto protoreflect.FileDescriptor

var file_proto_record_record_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x22, 0xaa, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x97, 0x02, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55,
	0x69, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x28,
	0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x11, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x43, 0x0a, 0x10, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x79, 0x0a, 0x18, 0x53, 0x74, 0x61, 0x66, 0x66, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x66, 0x66, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x3c, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x64, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x66, 0x66, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x13,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x10, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x41, 0x0a, 0x1a, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa9, 0x01, 0x0a, 0x1b, 0x50, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x13, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x10, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x70, 0x0a, 0x18, 0x53, 0x74, 0x61, 0x66, 0x66, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x66, 0x66, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x33, 0x0a, 0x16, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xa7, 0x01, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x66, 0x66,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x13, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x73, 0x0a, 0x19, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x33, 0x0a, 0x16, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xa8, 0x01, 0x0a, 0x1a, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x13, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xb3, 0x01, 0x0a, 0x25, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61,
	0x64, 0x41, 0x6e, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x66, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x69, 0x64, 0x12, 0x4a, 0x0a, 0x13, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x12, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x71, 0x0a, 0x26, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6e, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x47, 0x0a, 0x13, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61,
	0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x41, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xaf, 0x01, 0x0a, 0x21, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x66, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x69, 0x64, 0x12,
	0x4a, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x12, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x6d, 0x0a, 0x22, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x47, 0x0a, 0x13, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x61, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb6, 0x01, 0x0a, 0x26, 0x41,
	0x67, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6e, 0x64, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x67, 0x65,
	0x6e, 0x63, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x55, 0x69, 0x64, 0x12, 0x4a, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x12, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x22, 0x72, 0x0a, 0x27, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x41, 0x6e, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47,
	0x0a, 0x13, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x6e, 0x64,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x41, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb2, 0x01, 0x0a, 0x22, 0x41, 0x67, 0x65, 0x6e,
	0x63, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x69, 0x64,
	0x12, 0x4a, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x12, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x6e, 0x0a, 0x23,
	0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c,
	0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x13, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7c, 0x0a, 0x1b,
	0x53, 0x74, 0x61, 0x66, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x66, 0x66, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x66, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x69, 0x64, 0x22, 0x67, 0x0a, 0x1c, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x48, 0x61,
	0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x13, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x10, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x85, 0x01, 0x0a, 0x1e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x69, 0x64, 0x22, 0x6a, 0x0a, 0x1f, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47,
	0x0a, 0x13, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x6e, 0x64,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x41, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x1d, 0x53, 0x74, 0x61, 0x66,
	0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x1e, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x13, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41,
	0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xc2, 0x09, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x66,
	0x66, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x2e,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x13, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x22, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x66, 0x66, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x20, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5d, 0x0a, 0x12, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x21, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x81, 0x01, 0x0a, 0x1e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x61, 0x64, 0x41, 0x6e, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6e, 0x64, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x74, 0x61,
	0x66, 0x66, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6e, 0x64, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x1a, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x74, 0x61,
	0x66, 0x66, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a,
	0x1f, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6e,
	0x64, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x2e, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6e, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6e, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x1b, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x63, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a,
	0x14, 0x53, 0x74, 0x61, 0x66, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x48, 0x61, 0x73, 0x68, 0x12, 0x23, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x48,
	0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6c, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x66, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x26, 0x2e,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x69, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x66, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e,
	0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_record_record_proto_rawDescOnce sync.Once
	file_proto_record_record_proto_rawDescData = file_proto_record_record_proto_rawDesc
)

func file_proto_record_record_proto_rawDescGZIP() []byte {
	file_proto_record_record_proto_rawDescOnce.Do(func() {
		file_proto_record_record_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_record_record_proto_rawDescData)
	})
	return file_proto_record_record_proto_rawDescData
}

var file_proto_record_record_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_proto_record_record_proto_goTypes = []interface{}{
	(*RecordRequest)(nil),                           // 0: record.RecordRequest
	(*RecordResponse)(nil),                          // 1: record.RecordResponse
	(*PermissionRequest)(nil),                       // 2: record.PermissionRequest
	(*ErrorCodeAndInfo)(nil),                        // 3: record.ErrorCodeAndInfo
	(*StaffCreateRecordRequest)(nil),                // 4: record.StaffCreateRecordRequest
	(*StaffCreateRecordResponse)(nil),               // 5: record.StaffCreateRecordResponse
	(*PatientQueryRecordsRequest)(nil),              // 6: record.PatientQueryRecordsRequest
	(*PatientQueryRecordsResponse)(nil),             // 7: record.PatientQueryRecordsResponse
	(*StaffQueryRecordsRequest)(nil),                // 8: record.StaffQueryRecordsRequest
	(*StaffQueryRecordsResponse)(nil),               // 9: record.StaffQueryRecordsResponse
	(*AgencyQueryRecordsRequest)(nil),               // 10: record.AgencyQueryRecordsRequest
	(*AgencyQueryRecordsResponse)(nil),              // 11: record.AgencyQueryRecordsResponse
	(*StaffSetReadAndWritePermissionRequest)(nil),   // 12: record.StaffSetReadAndWritePermissionRequest
	(*StaffSetReadAndWritePermissionResponse)(nil),  // 13: record.StaffSetReadAndWritePermissionResponse
	(*StaffSetReadOnlyPermissionRequest)(nil),       // 14: record.StaffSetReadOnlyPermissionRequest
	(*StaffSetReadOnlyPermissionResponse)(nil),      // 15: record.StaffSetReadOnlyPermissionResponse
	(*AgencySetReadAndWritePermissionRequest)(nil),  // 16: record.AgencySetReadAndWritePermissionRequest
	(*AgencySetReadAndWritePermissionResponse)(nil), // 17: record.AgencySetReadAndWritePermissionResponse
	(*AgencySetReadOnlyPermissionRequest)(nil),      // 18: record.AgencySetReadOnlyPermissionRequest
	(*AgencySetReadOnlyPermissionResponse)(nil),     // 19: record.AgencySetReadOnlyPermissionResponse
	(*StaffUpdatePhotoHashRequest)(nil),             // 20: record.StaffUpdatePhotoHashRequest
	(*StaffUpdatePhotoHashResponse)(nil),            // 21: record.StaffUpdatePhotoHashResponse
	(*StaffUpdateDocumentHashRequest)(nil),          // 22: record.StaffUpdateDocumentHashRequest
	(*StaffUpdateDocumentHashResponse)(nil),         // 23: record.StaffUpdateDocumentHashResponse
	(*StaffUpdateDescriptionRequest)(nil),           // 24: record.StaffUpdateDescriptionRequest
	(*StaffUpdateDescriptionResponse)(nil),          // 25: record.StaffUpdateDescriptionResponse
}
var file_proto_record_record_proto_depIdxs = []int32{
	0,  // 0: record.StaffCreateRecordRequest.record_request:type_name -> record.RecordRequest
	3,  // 1: record.StaffCreateRecordResponse.error_code_and_info:type_name -> record.ErrorCodeAndInfo
	1,  // 2: record.PatientQueryRecordsResponse.record_responses:type_name -> record.RecordResponse
	3,  // 3: record.PatientQueryRecordsResponse.error_code_and_info:type_name -> record.ErrorCodeAndInfo
	1,  // 4: record.StaffQueryRecordsResponse.record_responses:type_name -> record.RecordResponse
	3,  // 5: record.StaffQueryRecordsResponse.error_code_and_info:type_name -> record.ErrorCodeAndInfo
	1,  // 6: record.AgencyQueryRecordsResponse.record_responses:type_name -> record.RecordResponse
	3,  // 7: record.AgencyQueryRecordsResponse.error_code_and_info:type_name -> record.ErrorCodeAndInfo
	2,  // 8: record.StaffSetReadAndWritePermissionRequest.permission_requests:type_name -> record.PermissionRequest
	3,  // 9: record.StaffSetReadAndWritePermissionResponse.error_code_and_info:type_name -> record.ErrorCodeAndInfo
	2,  // 10: record.StaffSetReadOnlyPermissionRequest.permission_requests:type_name -> record.PermissionRequest
	3,  // 11: record.StaffSetReadOnlyPermissionResponse.error_code_and_info:type_name -> record.ErrorCodeAndInfo
	2,  // 12: record.AgencySetReadAndWritePermissionRequest.permission_requests:type_name -> record.PermissionRequest
	3,  // 13: record.AgencySetReadAndWritePermissionResponse.error_code_and_info:type_name -> record.ErrorCodeAndInfo
	2,  // 14: record.AgencySetReadOnlyPermissionRequest.permission_requests:type_name -> record.PermissionRequest
	3,  // 15: record.AgencySetReadOnlyPermissionResponse.error_code_and_info:type_name -> record.ErrorCodeAndInfo
	3,  // 16: record.StaffUpdatePhotoHashResponse.error_code_and_info:type_name -> record.ErrorCodeAndInfo
	3,  // 17: record.StaffUpdateDocumentHashResponse.error_code_and_info:type_name -> record.ErrorCodeAndInfo
	3,  // 18: record.StaffUpdateDescriptionResponse.error_code_and_info:type_name -> record.ErrorCodeAndInfo
	4,  // 19: record.RecordService.StaffCreateRecord:input_type -> record.StaffCreateRecordRequest
	6,  // 20: record.RecordService.PatientQueryRecords:input_type -> record.PatientQueryRecordsRequest
	8,  // 21: record.RecordService.StaffQueryRecords:input_type -> record.StaffQueryRecordsRequest
	10, // 22: record.RecordService.AgencyQueryRecords:input_type -> record.AgencyQueryRecordsRequest
	12, // 23: record.RecordService.StaffSetReadAndWritePermission:input_type -> record.StaffSetReadAndWritePermissionRequest
	14, // 24: record.RecordService.StaffSetReadOnlyPermission:input_type -> record.StaffSetReadOnlyPermissionRequest
	16, // 25: record.RecordService.AgencySetReadAndWritePermission:input_type -> record.AgencySetReadAndWritePermissionRequest
	18, // 26: record.RecordService.AgencySetReadOnlyPermission:input_type -> record.AgencySetReadOnlyPermissionRequest
	20, // 27: record.RecordService.StaffUpdatePhotoHash:input_type -> record.StaffUpdatePhotoHashRequest
	22, // 28: record.RecordService.StaffUpdateDocumentHash:input_type -> record.StaffUpdateDocumentHashRequest
	24, // 29: record.RecordService.StaffUpdateDescription:input_type -> record.StaffUpdateDescriptionRequest
	5,  // 30: record.RecordService.StaffCreateRecord:output_type -> record.StaffCreateRecordResponse
	7,  // 31: record.RecordService.PatientQueryRecords:output_type -> record.PatientQueryRecordsResponse
	9,  // 32: record.RecordService.StaffQueryRecords:output_type -> record.StaffQueryRecordsResponse
	11, // 33: record.RecordService.AgencyQueryRecords:output_type -> record.AgencyQueryRecordsResponse
	13, // 34: record.RecordService.StaffSetReadAndWritePermission:output_type -> record.StaffSetReadAndWritePermissionResponse
	15, // 35: record.RecordService.StaffSetReadOnlyPermission:output_type -> record.StaffSetReadOnlyPermissionResponse
	17, // 36: record.RecordService.AgencySetReadAndWritePermission:output_type -> record.AgencySetReadAndWritePermissionResponse
	19, // 37: record.RecordService.AgencySetReadOnlyPermission:output_type -> record.AgencySetReadOnlyPermissionResponse
	21, // 38: record.RecordService.StaffUpdatePhotoHash:output_type -> record.StaffUpdatePhotoHashResponse
	23, // 39: record.RecordService.StaffUpdateDocumentHash:output_type -> record.StaffUpdateDocumentHashResponse
	25, // 40: record.RecordService.StaffUpdateDescription:output_type -> record.StaffUpdateDescriptionResponse
	30, // [30:41] is the sub-list for method output_type
	19, // [19:30] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_proto_record_record_proto_init() }
func file_proto_record_record_proto_init() {
	if File_proto_record_record_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_record_record_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorCodeAndInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffCreateRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffCreateRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatientQueryRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatientQueryRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffQueryRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffQueryRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgencyQueryRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgencyQueryRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffSetReadAndWritePermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffSetReadAndWritePermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffSetReadOnlyPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffSetReadOnlyPermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgencySetReadAndWritePermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgencySetReadAndWritePermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgencySetReadOnlyPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgencySetReadOnlyPermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffUpdatePhotoHashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffUpdatePhotoHashResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffUpdateDocumentHashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffUpdateDocumentHashResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffUpdateDescriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_record_record_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffUpdateDescriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_record_record_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_record_record_proto_goTypes,
		DependencyIndexes: file_proto_record_record_proto_depIdxs,
		MessageInfos:      file_proto_record_record_proto_msgTypes,
	}.Build()
	File_proto_record_record_proto = out.File
	file_proto_record_record_proto_rawDesc = nil
	file_proto_record_record_proto_goTypes = nil
	file_proto_record_record_proto_depIdxs = nil
}
